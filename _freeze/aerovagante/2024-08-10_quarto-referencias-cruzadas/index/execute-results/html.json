{
  "hash": "661535427aa4b6759a4ed72ef6647964",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Referencias cruzadas personalizadas en Quarto\"\ndescription: \"Cómo utilizar apropiadamente las refencias cruzadas personalizadas de Quarto\"\n\ndate: 2024-08-10\nimage: preview.svg\n\ncategories:\n  - Quarto\n  - Tutorial\n\ncitation: \n  url: http://alexespinosaco.github.io/2024-08-10_quarto-referencias-cruzadas/\n\nexecute: \n  message: false\n  warning: false\n  # eval: false\n\nlang: es\n\ntoc: true\ntoc-depth: 4\n\ndraft: false\n\ncrossref:\n  custom:\n    - kind: float\n      key: suppfig\n      reference-prefix: Figura S\n      space-before-numbering: false\n---\n\n::: {.cell}\n\n:::\n\n\n\nMientras seguía una de esas horribles «guías para autores», ese caótico documento donde las revistas nos indican cómo debemos hacer el trabajo que ellos deberían realizar, me encontré con la necesidad de que Quarto interpretara algunas figuras y tablas como «Figura S1» o «Tabla S1». A pesar de que [la guía de Quarto](https://quarto.org/docs/guide/) es una de las mejores que he leído y cuenta con secciones que explican [cómo hacerlo](https://quarto.org/docs/authoring/cross-references-custom.html#example-supplemental-figures), me encontré con algunas limitaciones que no están explícitamente detalladas. Aunque estas sí se mencionan en [otros apartados](https://github.com/quarto-dev/quarto-cli/issues/7507). Esta publicación sirve como un tutorial para usar las referencias cruzadas personalizadas en Quarto, como un recordatorio personal y como una solución/explicación para quienes se enfrenten al mismo problema y busquen una solución en español.\n\n## Referencias cruzadas en Quarto\n\nEntre las características más potentes de Quarto, las [referencias cruzadas](https://quarto.org/docs/authoring/cross-references.html) destacan por su simplicidad y utilidad a la hora de escribir documentos académicos, como artículos científicos. Las referencias cruzadas pueden aplicarse a imágenes, tablas, ecuaciones, secciones, entre otros elementos. Además, pueden ser utilizadas tanto en elementos generados por código como en el mismo código. Para usarlas, es indispensable etiquetar cada elemento con un identificador único[^1] adecuada. En este post, utilizaré una imagen como ejemplo, pero el proceso es aplicable a otros elementos con mínimas diferencias. \n\n[^1]: Identificador único para cada tipo de referencia cruzada.\n\n### Referenciando una imagen {#sec-ref-2}\n\nPara [referenciar una imagen](https://quarto.org/docs/authoring/cross-references.html#figures) en Quarto, se usa la sintaxis `#fig-element`, donde `element` es el identificador que asignamos. Por ejemplo, para hacer referenciable una imagen:\n\n``` markdown\n![*Cecropia*.](Cecropia_01.jpg){#fig-cecropia}\n```\n\n![*Cecropia*](Cecropia_01.jpg){#fig-cecropia}\n\nLa presencia de `#fig-cecropia` permite referenciar esta imagen en cualquier momento usando `@fig-cecropia`. Por ejemplo:\n\n``` markdown\nLa @fig-cecropia es de un yarumo.\n```\n\nObtendríamos: La @fig-cecropia es de un yarumo[^2].\n\n[^2]: <a href=\"https://commons.wikimedia.org/wiki/File:Cecropia_peltata_01.jpg\">Alexespinosaco</a>, <a href=\"https://creativecommons.org/licenses/by/4.0\">CC BY 4.0</a>, \n\n### Referenciando una imagen generada por código\n\nQuarto también permite [referenciar imágenes generadas por código](https://quarto.org/docs/authoring/cross-references.html#computations). En este caso, las etiquetas se añaden usando las [opciones del chunk de código](https://quarto.org/docs/reference/cells/cells-knitr.html), `label` y `fig-cap`. Por ejemplo, generemos una figura con [`{ggplot2}`](https://ggplot2.tidyverse.org) y los datos de [`iris`](https://www.rdocumentation.org/packages/datasets/versions/3.6.2/topics/iris):\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: fig-iris\n#| fig-cap: Un gráfico de dispersión.\n\niris |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      Petal.Length,\n      Petal.Width,\n      shape = Species\n    )\n  ) + \n  ggplot2::geom_point()\n```\n````\n\n::: {.cell-output-display}\n![Un gráfico de dispersión.](index_files/figure-html/fig-iris-1.png){#fig-iris width=672}\n:::\n:::\n\n\n\nEn la opción `fig-cap` tenemos la descripción de nuestra imagen, mientras que en `label` usamos `fig-iris`, que utilizaremos para referirnos a esta imagen. Si escribimos `@fig-iris`, obtendremos: @fig-iris.\n\n## Referencias personalizadas en Quarto\n\nCon `#fig-element` y `#tbl-element` cubrimos la mayoría de las necesidades para referenciar elementos en un trabajo académico. Sin embargo, si necesitamos incluir material suplementario, estos métodos no funcionan correctamente, ya que seguirán la numeración del texto principal. Afortunadamente, desde la [versión 1.4 de Quarto](https://quarto.org/docs/blog/posts/2024-01-24-1.4-release/), es posible crear [referencias cruzadas personalizadas](https://quarto.org/docs/authoring/cross-references-custom.html).\n\nComo ejemplo, crearemos una referencia cruzada para que las figuras suplementarias aparezcan en el texto como «Figura S1», «Figura S2», etc. Para ello, añadimos el siguiente código en el YAML del documento o proyecto de Quarto:\n\n```yaml\ncrossref:\n  custom:\n    - kind: float\n      key: suppfig\n      reference-prefix: Figure S\n      space-before-numbering: false\n```\n\nLas tres primeras opciones `crossref`, `custom`, `kind` son obligatorias. `crossref` se utiliza para personalizar las referencias cruzadas; `custom`, para indicar que será un tipo de referencia cruzada personalizado; y `kind`, para especificar el tipo de referencia (actualmente solo se admite `float`). Además, `key` es la clave que usaremos para referenciar el elemento (en este ejemplo, `#suppfig-element`); `reference-prefix` es el prefijo que aparecerá en la referencia (en este caso, `Figura S`). Finalmente, `space-before-numbering` define si se añade o no un espacio entre el prefijo y la numeración de la imagen (si es `false`, no se añade espacio). Con esto configurado[^4], probaremos con otras imágenes.\n\n[^4]: Hay [muchísimas](https://quarto.org/docs/reference/metadata/crossref.html#custom) más opciones.\n\n### Referenciando una imagen suplementaria\n\nHaremos algo similar a lo mostrado más [arriba](#sec-ref-2), pero cambiaremos `fig` por `suppfig`:\n\n``` markdown\n![*Cecropia*.](Cecropia_03.jpg){#fig-cecropia}\n```\n\n![*Cecropia*](cecropia_03.jpg){#suppfig-cecropia}\n\nAhora podemos referenciar esta imagen en cualquier momento usando `@suppfig-cecropia`. Si escribimos:\n\n``` markdown\nLa @suppfig-cecropia es de otro yarumo.\n```\n\nObtenemos: La @suppfig-cecropia es de otro yarumo[^3].\n\n[^3]: <a href=\"https://commons.wikimedia.org/wiki/File:Cecropia_peltata_03.jpg\">Alexespinosaco</a>, <a href=\"https://creativecommons.org/licenses/by/4.0\">CC BY 4.0</a>, \n\n### Referenciando una imagen generada por código\n\nSi quisiéramos hacer lo mismo para una imagen generada por código, podríamos intentar lo siguiente:\n\n\n\n::: {.cell}\n\n````{.cell-code}\n```{{r}}\n#| label: suppfig-iris\n#| fig-cap: Gráfico de dispersión.\n\niris |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      Species,\n      Petal.Length\n    )\n  ) + \n  ggplot2::geom_boxplot()\n```\n````\n\n::: {.cell-output-display}\n![Gráfico de dispersión.](index_files/figure-html/suppfig-iris-1.png){width=672}\n:::\n:::\n\n\n\nSin embargo, esto no genera el prefijo en la descripción de la imagen. Además, si intentamos referenciarla usando `@suppfig-iris`, veremos que aparece el error `?@suppfig-iris`. Esto se debe a cómo está configurado actualmente Quarto. Para que Quarto interprete correctamente esta imagen utilizando referencias cruzadas personalizadas, debemos usar la sintaxis de Divs, que consiste en encerrar el código entre dos grupos de `:::` y realizar algunos pequeños cambios:\n\n````markdown\n::: {#suppfig-iris}\n\n```r\niris |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      Species,\n      Petal.Length\n    )\n  ) + \n  ggplot2::geom_boxplot()\n```\n\nGráfico de dispersión.\n\n:::\n````\n\n::: {#suppfig-iris}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\nUn boxplot.\n\n:::\n\nAhora sí podemos usar `@suppfig-iris` sin problema, como se muestra en @suppfig-iris.\n\n## Conclusiones\n\nComo hemos visto, Quarto es muy potente y sumamente útil para realizar referencias cruzadas, una tarea tediosa cuando escribimos un artículo científico o un trabajo académico. Aunque referenciar material suplementario puede resultar confuso al principio, sobre todo cuando son elementos generados por código, con un poco de práctica se vuelve sencillo y se ahorra mucho tiempo al evitar problemas con las referencias. Solo nos queda esperar que sigan apareciendo más plantillas de Quarto para revistas académicas, y estaremos un paso más cerca de decir ¡adiós, maldito .doc!",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}